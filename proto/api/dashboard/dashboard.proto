syntax = "proto3";

package nspass.api.dashboard.v1;

import "common.proto";

// 系统概览数据
message SystemOverview {
  int32 user_count = 1;
  int32 server_count = 2;
  int32 rule_count = 3;
  double monthly_traffic = 4; // GB
}

// 流量趋势项
message TrafficTrendItem {
  string date = 1;
  double traffic = 2; // GB
}

// 用户流量占比项
message UserTrafficItem {
  string user = 1;
  double value = 2; // 百分比
  double traffic = 3; // 实际流量GB
}

// 服务器状态项
message ServerStatusItem {
  string region = 1;
  int32 online = 2;
  int32 offline = 3;
  int32 total = 4;
}

// 规则状态统计
message RuleStatusStats {
  int32 active = 1;
  int32 paused = 2;
  int32 error = 3;
  int32 total = 4;
}

// 系统性能数据
message SystemPerformance {
  double cpu_usage = 1; // 百分比
  double memory_usage = 2; // 百分比
  double disk_usage = 3; // 百分比
  double network_in = 4; // MB/s
  double network_out = 5; // MB/s
}

// 实时流量数据
message RealTimeTraffic {
  string timestamp = 1;
  double upload = 2; // MB/s
  double download = 3; // MB/s
  int32 connections = 4;
}

// 系统告警
message SystemAlert {
  int32 id = 1;
  AlertType type = 2;
  string message = 3;
  string timestamp = 4;
  bool resolved = 5;
}

enum AlertType {
  ALERT_TYPE_UNSPECIFIED = 0;
  ALERT_TYPE_INFO = 1;
  ALERT_TYPE_WARNING = 2;
  ALERT_TYPE_ERROR = 3;
}

// 热门规则
message TopRule {
  string rule_id = 1;
  string rule_name = 2;
  double traffic = 3;
  int32 connections = 4;
}

// 日志项
message LogItem {
  string timestamp = 1;
  string level = 2;
  string message = 3;
}

// 日志摘要
message LogSummary {
  int32 total = 1;
  int32 info = 2;
  int32 warning = 3;
  int32 error = 4;
  repeated LogItem recent_logs = 5;
}

// 地理流量分布
message TrafficByRegion {
  string region = 1;
  string country = 2;
  double traffic = 3;
  int32 users = 4;
}

// 系统组件状态
message SystemComponent {
  string name = 1;
  ComponentStatus status = 2;
  optional string message = 3;
}

enum ComponentStatus {
  COMPONENT_STATUS_UNSPECIFIED = 0;
  COMPONENT_STATUS_UP = 1;
  COMPONENT_STATUS_DOWN = 2;
  COMPONENT_STATUS_DEGRADED = 3;
}

// 系统健康状态
message SystemHealth {
  HealthStatus overall = 1;
  repeated SystemComponent components = 2;
}

enum HealthStatus {
  HEALTH_STATUS_UNSPECIFIED = 0;
  HEALTH_STATUS_HEALTHY = 1;
  HEALTH_STATUS_WARNING = 2;
  HEALTH_STATUS_CRITICAL = 3;
}

// === 请求响应消息 ===

// 流量趋势查询请求
message GetTrafficTrendRequest {
  optional int32 days = 1;
  optional string start_date = 2;
  optional string end_date = 3;
}

// 用户流量统计查询请求
message GetUserTrafficStatsRequest {
  optional int32 limit = 1;
  optional TimePeriod period = 2;
}

enum TimePeriod {
  TIME_PERIOD_UNSPECIFIED = 0;
  TIME_PERIOD_DAY = 1;
  TIME_PERIOD_WEEK = 2;
  TIME_PERIOD_MONTH = 3;
}

// 获取热门规则请求
message GetTopRulesRequest {
  int32 limit = 1;
}

// 获取日志摘要请求
message GetLogSummaryRequest {
  optional int32 hours = 1;
  optional LogLevel level = 2;
}

enum LogLevel {
  LOG_LEVEL_UNSPECIFIED = 0;
  LOG_LEVEL_INFO = 1;
  LOG_LEVEL_WARNING = 2;
  LOG_LEVEL_ERROR = 3;
}

// === 响应消息 ===

message GetSystemOverviewResponse {
  nspass.common.v1.ApiResponse base = 1;
  optional SystemOverview data = 2;
}

message GetTrafficTrendResponse {
  nspass.common.v1.ApiResponse base = 1;
  repeated TrafficTrendItem data = 2;
}

message GetUserTrafficStatsResponse {
  nspass.common.v1.ApiResponse base = 1;
  repeated UserTrafficItem data = 2;
}

message GetServerStatusStatsResponse {
  nspass.common.v1.ApiResponse base = 1;
  repeated ServerStatusItem data = 2;
}

message GetRuleStatusStatsResponse {
  nspass.common.v1.ApiResponse base = 1;
  optional RuleStatusStats data = 2;
}

message GetSystemPerformanceResponse {
  nspass.common.v1.ApiResponse base = 1;
  optional SystemPerformance data = 2;
}

message GetRealTimeTrafficResponse {
  nspass.common.v1.ApiResponse base = 1;
  repeated RealTimeTraffic data = 2;
}

message GetSystemAlertsResponse {
  nspass.common.v1.ApiResponse base = 1;
  repeated SystemAlert data = 2;
}

message GetTopRulesResponse {
  nspass.common.v1.ApiResponse base = 1;
  repeated TopRule data = 2;
}

message GetLogSummaryResponse {
  nspass.common.v1.ApiResponse base = 1;
  optional LogSummary data = 2;
}

message GetTrafficByRegionResponse {
  nspass.common.v1.ApiResponse base = 1;
  repeated TrafficByRegion data = 2;
}

message GetSystemHealthResponse {
  nspass.common.v1.ApiResponse base = 1;
  optional SystemHealth data = 2;
}

message RefreshDashboardResponse {
  nspass.common.v1.ApiResponse base = 1;
} 